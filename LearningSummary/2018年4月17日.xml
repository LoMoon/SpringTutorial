2018年4月17日
一些java基础
例如内部类 （ 内部类，方法内部类，匿名内部类 ）
异常  自己声明异常以及管理

        try{
        }catch(FileNotFoundException|ArrayIndexOutOfBoundsException e){
        }

try-with-resouces：
        try( FileReader fr = new FileReader( "D:/text.txt" ) ) {
        char[] c = new char[50];
        fr.read(c);
        for(char a: c)
        System.out.println(a);
        }catch (IOException e){
        System.out.println("IO异常"+e);
        }

匿名内部类：@Test
        public void InterfaceInner(){
        WriteSome( new Message(){

        @Override
        public String getMessage() {
        return "hello";
        }
        } );
        }

内部类 ：class Outer_Demo {
        int num;

        // inner class
        private class Inner_Demo {
        public void print() {
        System.out.println("This is an inner class");
        }
        }

        // Accessing he inner class from the method within
        void display_Inner() {
        Inner_Demo inner = new Inner_Demo();
        inner.print();
        }
        }

        public class My_class {

        public static void main(String args[]) {
        // Instantiating the outer class
        Outer_Demo outer = new Outer_Demo();

        // Accessing the display_Inner() method.
        outer.display_Inner();
        }
        }

方法内部类：public class Outerclass {
        // instance method of the outer class
        void my_Method() {
        int num = 23;

        // method-local inner class
        class MethodInner_Demo {
        public void print() {
        System.out.println("This is method inner class "+num);
        }
        } // end of inner class

        // Accessing the inner class
        MethodInner_Demo inner = new MethodInner_Demo();
        inner.print();
        }

        public static void main(String args[]) {
        Outerclass outer = new Outerclass();
        outer.my_Method();
        }
        }
